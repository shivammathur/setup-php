# GitHub Action for Phalcon with PostgreSQL
## Notes
## Make sure you have .env.example or .env file in your project
## and you have loaded Dotenv (https://github.com/vlucas/phpdotenv)
name: Testing Phalcon with PostgreSQL
on: [push, pull_request]
jobs:
  phalcon:
    name: Phalcon (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    env:
      DB_ADAPTER: pgsql
      DB_HOST: 127.0.0.1
      DB_NAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      CODECEPTION_URL: 127.0.0.1
      CODECEPTION_PORT: 8888
      DB_CONNECTION: pgsql
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.2', '7.3', '7.4']
      # For phalcon 3.x, use
      # php-versions: ['7.0', '7.1', '7.2', '7.3']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, zip, phalcon4, pgsql #use phalcon3 for the phalcon 3.x
          coverage: xdebug #optional
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Prepare the application
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Run Migration
        run: |
          if [ ! -e phinx.yml ]; then vendor/bin/phinx init; fi
          vendor/bin/phinx migrate
          vendor/bin/phinx seed:run
        env:
          DB_PORT: ${{ job.services.postgres.ports['5432'] }}
      - name: Run Tests
        run: |
          (cd public && nohup php -S $CODECEPTION_URL:$CODECEPTION_PORT > phalcon.log 2>&1 &)
          vendor/bin/codecept build
          vendor/bin/codecept run
        env:
          DB_PORT: ${{ job.services.postgres.ports['5432'] }}